namespace AdventOfCode
//
// open System
// open System.Text.RegularExpressions
// open Microsoft.VisualStudio.TestTools.UnitTesting
//
// module DaySix =
//   type Direction =
//     | North
//     | South
//     | East
//     | West
//     
//   type Way =
//     | Horizontal
//     | Vertical
//     | Both
//
//   type Cell =
//     | Empty
//     | Guard of Direction
//     | Obstruction
//     | Visited of Way
//     | Block
//
//   type Area = Cell array array
//
//   let parse (input: string) : Area =
//     input.Trim().Split(Environment.NewLine)
//     |> Array.map (fun x ->
//       x.ToCharArray()
//       |> Array.map (fun y ->
//         match y with
//         | '^' -> Guard North
//         | '#' -> Obstruction
//         | '.' -> Empty
//         | _ -> failwith "Caractère invalide"))
//
//   let cellToChar (cell: Cell) : char =
//     match cell with
//     | Guard North -> '^'
//     | Guard South -> 'v'
//     | Guard East -> '>'
//     | Guard West -> '<'
//     | Obstruction -> '#'
//     | Visited Vertical -> '|'
//     | Visited Horizontal -> '-'
//     | Visited Both -> '+'
//     | Empty -> '.'
//     | Block -> '0'
//     | _ -> ' '
//   
//   let move (area: Area) : Area =
//     let height = (area |> Array.length) - 1
//     let width = (area[0] |> Array.length) - 1
//     let newArea = Array.copy area
//
//     for row in 0..height do
//       for column in 0..width do
//         match area[row][column] with
//         | Guard direction ->
//           let newRow, newColumn =
//             match direction with
//             | North -> row - 1, column
//             | South -> row + 1, column
//             | West -> row, column - 1
//             | East -> row, column + 1
//           
//           if newRow >= 0 && newRow <= width && newColumn >= 0 && newColumn <= height then
//             if area[newRow][newColumn] = Obstruction then
//               let newDirection =
//                 match direction with
//                 | North -> East
//                 | East -> South
//                 | South -> West
//                 | West -> North
//
//               newArea[row][column] <- Guard newDirection
//             else
//               let neighbor =
//                 match direction with
//                 | North -> newArea[row][column+1] = Visited Horizontal || newArea[row][column+1] = Visited Both
//                 | South -> newArea[row][column-1] = Visited Horizontal || newArea[row][column-1] = Visited Both
//                 | West ->  newArea[row-1][column] = Visited Vertical || newArea[row-1][column] = Visited Both
//                 | East ->  newArea[row+1][column] = Visited Vertical || newArea[row+1][column] = Visited Both
//               if neighbor then
//                 newArea[row][column] <- Visited Both
//               else
//                 newArea[row][column] <- Visited (match direction with
//                                                 | South -> Vertical
//                                                 | North -> Vertical
//                                                 | East -> Horizontal
//                                                 | West -> Horizontal)
//               let list = match direction with
//                          | South -> [0 .. column-1] |> List.rev |> List.map(fun i -> newArea[row+1][i])
//                          | North -> [column+1 .. width] |> List.map(fun i -> newArea[row-1][i])
//                          | West  -> [0 .. row-1] |> List.rev |> List.map(fun i -> newArea[i][column-1])
//                          | East  -> [row+1 .. height] |> List.map(fun i -> newArea[i][column+1])
//               let value = list |> List.map (fun t -> t |> cellToChar)|> List.map string |> String.concat ""
//               if Regex.IsMatch(value, @"^[^#]*\+#") then
//                 printfn $"%i{row} %i{column} %i{newRow} %i{newColumn}"
//                 newArea[row][column] <- Block
//               newArea[newRow][newColumn] <- Guard direction
//         | _ -> ()
//     newArea
//
//   let isGuardOnEdge (area: Area) =
//     let width = area[0].Length - 1
//     let height = area.Length - 1
//
//     area
//     |> Array.mapi (fun row line ->
//       line
//       |> Array.mapi (fun col cell ->
//         match cell with
//         | Guard _ -> row = 0 || row = height || col = 0 || col = width
//         | _ -> false))
//     |> Array.concat
//     |> Array.exists id
//     
//
//
//   let printArea (area: Area) : Area =
//     let maxRow = area.Length - 1
//     let maxCol = area[0].Length - 1
//     
//     for row in 0 .. maxRow do
//       for col in 0 .. maxCol do
//         printf $"%c{area[row][col] |> cellToChar}"
//       printfn ""
//     printfn ""
//     area
//
//   let rec play (area: Area) : Area =
//     if isGuardOnEdge area then
//       area
//     else
//       area |> move |> play
//
//   let partOne (input: string) : int =
//     input
//     |> parse
//     |> play
//     |> Array.concat
//     |> Array.filter (fun cell ->
//       match cell with
//       | Visited _ | Guard _ | Block -> true
//       | _ -> false)
//     |> Array.length
//
//   let partTwo (input: string) : int =
//     input
//     |> parse
//     |> play
//     |> printArea
//     |> Array.concat
//     |> Array.filter (fun cell ->
//       match cell with
//       | Block -> true
//       | _ -> false)
//     |> Array.length
//
// [<TestClass>]
// type DaySixTest() =
//   let exampleInput =
//     """
// ....#.....
// .........#
// ..........
// ..#.......
// .......#..
// ..........
// .#..^.....
// ........#.
// #.........
// ......#..."""
//
//   let puzzleInput =
//     """
// ..................#................................................................#........#.....................................
// ...#...........#...................................................#........................................#.................#...
// ...................................#................#.#...............#.................................................#.........
// .....#......#................#.....................................................................#..........#........#......#...
// ............................................................................................#.....................#...............
// .....................#..##...#........................#.................#.......................#..#.........#.......#...#......#.
// ............##....................................##..................#...............................#....#......................
// .............#............#.#..#.......#...........#..............#...............#.....#.........................................
// ....................#..........##.........#.........#................#............................................................
// ....#.......#................................................................#...#.#..........................................#.#.
// ..#..............#.....................................#..........#.#....#..............#..................#.#............#.......
// .#.......#.........................#........................#..#.....#............................................................
// ........#...#......................#...........#......................................#....................#......................
// .............................#..............#........##....#....................#......#....................#............#......#.
// ..............#..............#............#.......................##....#..........................................#.........#....
// .............#............#..........#..........#...#.....................................................#.......................
// ..#........#.....#..........................................#................................................#...#.#...#..........
// ........#.....................#...#..#......#.........................................................#.....##.........#..........
// ..............................................................................................#...#...............................
// ..#.......................#..........................#......#...................................................................#.
// .......#.........................#..............#.........#.............#.......................................#...#.............
// ..................#.................#.......................#....................#....................................#...........
// ...#...#.......#......##.#...............#....#..............#..........................................#....#..#.................
// #................................#.......#.....#.......#.............#..................#........#................................
// ...........#..................................#.......................................................................#.#..#......
// .......#........#.........................................#..........................#...........................#.....#..........
// ................#..#.....................#..#...........................#...........................................#.............
// #...#.......................#................................................#................#................................#..
// ..........#...........................#.......#............................................................................#.....#
// ..................................#............................................................#..................................
// ......................#........#.............#....#.....#.......#..........................#..........................#...........
// ...........................##.................#.............#........................#...#..................#.....................
// .............................................................................................................#....#..........#....
// ................#...................................#...........#..........#....................#............................#....
// ........#....#................................................#................##..#..................................#...........
// ...........#....................................................#...#.#......#....................................................
// .......................#.........................................................^....................................#...........
// ..........................#.............##..#........#.#....#.......#....................#...........#.........#.....#............
// ........#...........................#..#..........................................................#...............................
// ....#....................................#....#.........................................#.........#...............................
// ...............#...................................#.....#.................................#....................................#.
// ......#...............................................................#.............................#........................#....
// .........................#.....#.........................#.#...............#.........#.....#..................#..#.........#......
// .........................................................#......#........##.......................#...#......#................#...
// .......................................#.....#.................................#..................................................
// ..................#..................................#..........................................................................#.
// ...................#....#.........#.......#................#....................#.........................#......#.....#..#.......
// ................................#..............................................................................#....#.............
// .....................#.#.............#.................#..........#.......#.........................................#.............
// ......#....................#....................................................................#...#.............................
// ........#........#...........#.##.............#........................#............#..............#.........#....#........#......
// ........................#.................................................................#.......................................
// ............................................................#.....#....................#............#.....#....#............#.....
// ...........#............#....#........................................................##............#..............#..............
// ...........#...........#.....#..............#..............##....#........#......#................................................
// ..#................................................................................#......................#......#................
// ....................#.........#......................#.............................#.......#.......................#.............#
// ..#...#....#......................................................................................................#...............
// ...........#................................................................................#...............................#.....
// ....................................#............#..........#.........................#..................................#.......#
// ...................#......#...................#............#......#........#................#.............#...........#.........#.
// ........................#..................................#........#..................#..........................................
// ............#..#...........#..................##....................#...........................................#.................
// .......................................................................................#.....#............#.......................
// ...............................................#....#................................#..#..........................#..#...........
// ..............#..#.....#.........#....................#.......#..#..............#...............................#.....#...........
// ..........#............................#..........................................................................................
// ........................................#........#........................................................#.#.....................
// #................#......................#..................................................................................#......
// ...............................................................................#................................#.................
// ...................................................................................................................#.#........#...
// #........................................................................#......................................#.#...............
// ...#......#............#...................#.............#........#..........................................#......#.............
// ..............##....#...................................................#......................#..................................
// ...............#........................................................................#...........#...#.#.......................
// ..........#.#.....#................................#...........#........#.......#.................................................
// #....................#......................................................................................#.....................
// ..............#...##...........................................#.............#.......#..................#..............#..........
// .#.............................................#..............................................................................#...
// ...#................................#............................................#............................#...................
// ..............................#......................................................#..........................................#.
// ...................#.....................................#..................................#......#..............................
// ....#.#..........##.............#.......#........................##..........#.................#..................................
// #..#................#........##....................................................................................#..............
// ........#...#.........................................................................#...........................................
// ......................................................#....#...................#..#.................................#.............
// ........#...............#........#..............................................#............................#....................
// ...#..............................#.........................................##.......................................#....#.......
// ...#................#..............#.......#......................................................................................
// ........#..................#.............................................................#...........................#....#.......
// ......................#.#..........#.......#..................................#..#...#............#...............#...............
// .....#..................#....#..#......#.......................#.....................................................#............
// .....#................................#.........................#..................#.#..........#...#............#.....#..........
// ....#...................#....#.#.........#........#..................................................................#....#..#....
// ........#...............#......................................#........#..............................#..........................
// ....#...#.#.....#..............#..................#..........#...#..#......................#...#..........#......................#
// ...........#...................................................................................................#................#.
// .................................##..............#.............................#...............................#..................
// ...........#.................#.............##...................................#.......................#.................##......
// .....#..................#......#........#.................................................#..#........................#..#........
// ......#.......#......................................................................#.#.........#....#...........................
// ..................#.#........................#......#................................................................#......#.....
// .....................#............#...................#.....#....................................#.......#..........#.......#.....
// #.............................#...............................#...#...............................................................
// ..##.........#........#......................................#.....................#...#.............#............#..#............
// ..........#.....................#..#....................#...#....................#....................#.....................#.....
// ...........#..........#...............#..#..........#..............................................#.#............................
// ............#...#...#.............#.........#.............................#...............#.......................................
// .........#...........#...............................................................#............................................
// .#..#.................................................................#............#.#.......................##...................
// ........##............#...................#................................#......................................................
// ............................................#..........................#..........................................................
// #...................#...........#..............#...#............#.#........#.................#......#.............................
// ........#....................................#....................................................................................
// ...........#.........#..#...............#...........#.....##.#......#....##............#....#....#.#.........##.........#.........
// ..#......................#..........#.................#.................#......#.............................#........#...........
// ....................#.................#....#..............................#....#.............#....#....#.....................#....
// ............#.................#.................................#...............................#..#...........................#..
// ...................................................#.....#..............#.......#....................#.#..........................
// ..#.........##..#........#...................................................................................#............#.......
// .....#..............................#......................................................................#........#.............
// ................................#........##.......#...............#..............#.......#...#.#........#.........................
// ..............................#.....................#.........................................#..................................#
// ...........#...................##.................#.................................#...............................#........#....
// ..............................#...##......#..................#...#................................#......#.......#...............#
// .....................##......#......#.#.......#..............#......#.................#.........#...................#.............
// ..........................#................................#...........#..........................................................
// ...#.....#....................#.....................#...#.....#.............................#.#....#.....#.#.................#....
// ............................#...#........#......................................................................#.....#...........
// ............#..........##..................#.............................................................#.....#..#..............."""
//
//   [<TestMethod>]
//   member this.PartOneExample() =
//     Assert.AreEqual<int>(41, DaySix.partOne exampleInput)
//
//   [<TestMethod>]
//   member this.PartOnePuzzle() =
//     Assert.AreEqual<int>(4656, DaySix.partOne puzzleInput)
//
//   [<TestMethod>]
//   member this.PartTwoExample() =
//     Assert.AreEqual<int>(6, DaySix.partTwo exampleInput)
//
//   [<TestMethod>]
//   member this.PartTwoPuzzle() =
//     Assert.AreEqual<int>(6, DaySix.partTwo puzzleInput)
